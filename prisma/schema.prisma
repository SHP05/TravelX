// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:Suman@5296@localhost:5432/travelx_db"
}

enum Role {
  ADMIN
  USER
}

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  password String
  role     Role     @default(USER)
  bookings Booking[]
  reviews  Review[]
  Tour Tour[]
}

model Tour {
  id          Int       @id @default(autoincrement())
  title       String
  agentId     Int
  description String
  priceAdult  Float
  priceChild  Float
  contactNo   String
  from        String
  to          String
  nights      Int
  Inclusion   String[]
  paymentPolicy   String[]
  meals       Boolean
  accommodation   Boolean
  transnfer   Boolean
  admin       User      @relation(fields: [agentId], references: [id])
  bookings    Booking[]
  reviews     Review[]
}

model Booking {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  tour      Tour     @relation(fields: [tourId], references: [id])
  tourId    Int
  contactNo String
  date      DateTime @default(now())
}

model Review {
  id        Int      @id @default(autoincrement())
  content   String
  rating    Int      @default(3) 
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  tour      Tour     @relation(fields: [tourId], references: [id])
  tourId    Int
}